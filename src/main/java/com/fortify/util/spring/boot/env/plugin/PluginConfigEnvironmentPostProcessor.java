/*******************************************************************************
 * (c) Copyright 2020 Micro Focus or one of its affiliates
 *
 * Permission is hereby granted, free of charge, to any person obtaining a 
 * copy of this software and associated documentation files (the 
 * "Software"), to deal in the Software without restriction, including without 
 * limitation the rights to use, copy, modify, merge, publish, distribute, 
 * sublicense, and/or sell copies of the Software, and to permit persons to 
 * whom the Software is furnished to do so, subject to the following 
 * conditions:
 * 
 * The above copyright notice and this permission notice shall be included 
 * in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY 
 * KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR 
 * PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, 
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF 
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN 
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
 * IN THE SOFTWARE.
 ******************************************************************************/
package com.fortify.util.spring.boot.env.plugin;

import java.io.IOException;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.env.EnvironmentPostProcessor;
import org.springframework.boot.env.YamlPropertySourceLoader;
import org.springframework.boot.logging.DeferredLog;
import org.springframework.core.Ordered;
import org.springframework.core.annotation.Order;
import org.springframework.core.env.ConfigurableEnvironment;
import org.springframework.core.env.MutablePropertySources;
import org.springframework.core.io.Resource;
import org.springframework.core.io.support.ResourcePatternUtils;

/**
 * This {@link EnvironmentPostProcessor} implementation adds plugin configuration files 
 * as property sources. Spring loads this class based on src/main/resources/META-INF/spring.factories.
 * 
 * @author Ruud Senden
 *
 */
@Order(Ordered.LOWEST_PRECEDENCE)
public class PluginConfigEnvironmentPostProcessor implements EnvironmentPostProcessor {
	private final DeferredLog log = new DeferredLog();
	
	@Override
	public void postProcessEnvironment(ConfigurableEnvironment environment, SpringApplication application) {
		application.addInitializers(ctx -> log.replayTo(PluginConfigEnvironmentPostProcessor.class));
		addPluginConfigPropertySources(environment.getPropertySources());
	}
	
	private final void addPluginConfigPropertySources(MutablePropertySources propertySources) {
		int count = 0;
		try {
			YamlPropertySourceLoader yamlLoader = new YamlPropertySourceLoader();
			Resource[] resources = ResourcePatternUtils.getResourcePatternResolver(null).getResources("classpath*:/pluginConfig/**/*.yml");
			for ( Resource resource : resources ) {
				yamlLoader.load(resource.getFilename(), resource).forEach(propertySources::addLast);
				log.debug("Loaded plugin configuration file "+resource.getFilename());
				count++;
			}
		} catch (IOException e ) {
			throw new IllegalStateException("Error loading plugin configuration files");
		}
		log.info("Loaded "+count+" plugin configuration files");
	}

}
