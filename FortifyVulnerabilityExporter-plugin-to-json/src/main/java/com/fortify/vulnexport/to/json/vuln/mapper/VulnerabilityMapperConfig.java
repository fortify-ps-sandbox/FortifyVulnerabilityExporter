/*******************************************************************************
 * (c) Copyright 2020 Micro Focus or one of its affiliates
 *
 * Permission is hereby granted, free of charge, to any person obtaining a 
 * copy of this software and associated documentation files (the 
 * "Software"), to deal in the Software without restriction, including without 
 * limitation the rights to use, copy, modify, merge, publish, distribute, 
 * sublicense, and/or sell copies of the Software, and to permit persons to 
 * whom the Software is furnished to do so, subject to the following 
 * conditions:
 * 
 * The above copyright notice and this permission notice shall be included 
 * in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY 
 * KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR 
 * PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, 
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF 
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN 
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
 * IN THE SOFTWARE.
 ******************************************************************************/
package com.fortify.vulnexport.to.json.vuln.mapper;

import com.fortify.util.spring.expression.TemplateExpression;
import com.fortify.util.spring.expression.TemplateExpressionMap;
import com.fortify.vulnexport.api.vuln.IVulnerabilityAccessor;

import lombok.Data;

/**
 * Configuration class for {@link VulnerabilityMapper}, specifying how
 * individual vulnerabilities should be transformed into output JSON 
 * format based on the following rules:
 * <ul>
 *  <li>The {@link #value} and {@link #fields} properties are mutually exclusive</li>
 *  <li>The {@link #value} expression is evaluated on each {@link IVulnerabilityAccessor} to generate plain values</li>
 *  <li>The {@link #fields} map generates a JSON object for each {@link IVulnerabilityAccessor}</li>
 *  <li>If {@link #propertyName} is specified, the value generated by {@link #value} or {@link #fields} 
 *      will be added to the output JSON object, using the {@link #propertyName} expression evaluation 
 *      result as the JSON property name</li>
 *  <li>If {@link #propertyName} is not specified, the value generated by {@link #value} or {@link #fields} 
 *      will be added to the output JSON array</li>
 * </ul> 
 * 
 * Please refer to the FoDToJsonCustom.yml and SSCToJsonCustom.yml sample configuration files 
 * to get a better understanding of how these configuration properties work.
 * 
 * @author Ruud Senden
 */
@Data
public final class VulnerabilityMapperConfig {
	private TemplateExpression propertyName;
	private TemplateExpression value;
	private TemplateExpressionMap fields;
}