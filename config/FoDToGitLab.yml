export:
  from: fod
  to: json.gitlab.sast, json.gitlab.dast

fod:
  release:
    embed:                                          # Load static and dynamic scan details if available
      - propertyName: dynamicScanSummary
        uri: /api/v3/scans/{currentDynamicScanId}/summary
        embedIf: currentDynamicScanId!=null
      - propertyName: siteTree
        uri: /api/v3/scans/{currentDynamicScanId}/site-tree
        embedIf: currentDynamicScanId!=null
        onError: LOG_WARN                           # Site tree may not be available, so we just log a warning
      - propertyName: staticScanSummary
        uri: /api/v3/scans/{currentStaticScanId}/summary
        embedIf: currentStaticScanId!=null
  vulnerability:
    filterParam: scantype:Static|Dynamic            # Have FoD return only static and dynamic issues 
    embed:                                          # Also load details, recommendations and request-response data as required for GitLab output
      - subEntity: details
      - subEntity: recommendations
      - subEntity: request-response
        embedIf:   scantype=='Dynamic'

json.gitlab.sast.output:
  stdout: false                                     # Disabled by default to avoid vulnerability data being exposed through log files
  pretty: true                                      # Useful for debugging, disable for optimal performance
  file:   ${CI_PROJECT_DIR:${export.dir}}/gl-fortify-sast.json  # Write to CI_PROJECT_DIR if defined, current directory otherwise

json.gitlab.dast.output:
  stdout: false                                     # Disabled by default to avoid vulnerability data being exposed through log files
  pretty: true                                      # Useful for debugging, disable for optimal performance
  file:   ${CI_PROJECT_DIR:${export.dir}}/gl-fortify-dast.json  # Write to CI_PROJECT_DIR if defined, current directory otherwise
